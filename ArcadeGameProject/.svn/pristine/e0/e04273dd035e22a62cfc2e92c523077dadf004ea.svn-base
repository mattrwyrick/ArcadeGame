import java.awt.Color;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;

import javax.swing.JComponent;

public class Digger extends JComponent implements Entity {
	private static final double SPEED_SCALE = 2;
	private Point2D.Double centerPoint;
	private double size;
	private double vx;
	private double vy;

	public Digger(Point2D.Double pt, double size) {
		this.centerPoint = pt;
		this.vx = 0;
		this.vy = 0;
		this.size = size;
		this.setupKeyBindings();
	}
	
	public void moveCenter(double dx, double dy){
		this.centerPoint.x+=dx;
		this.centerPoint.y+=dy;
	}
	
	public void setSpeed(double vx, double vy){
		this.vx = this.SPEED_SCALE*vx;
		this.vy = this.SPEED_SCALE*vy;
	}

	@Override
	public void timePassed() {
		if ( this.vx != 0 && (this.centerPoint.y-size) % size ==0)
			this.moveCenter(this.vx, this.vy);
		else
			this.moveCenter(0,this.vx);
		if (this.vy != 0 && (this.centerPoint.x-size) % size ==0)
			this.moveCenter(this.vx, this.vy);
		else
			this.moveCenter(this.vy,0);
	}

	@Override
	public Shape getShape() {
		double x = this.centerPoint.getX();
		double y = this.centerPoint.getY();
		return new Ellipse2D.Double(x,y,this.size,this.size);
	}

	@Override
	public Color getColor() {
		return Color.green;
	}
	
	public void setupKeyBindings(){
		System.out.println("Arrow Keys Setup.");
		int focusType = JComponent.WHEN_IN_FOCUSED_WINDOW;
//		this.getInputMap(focusType).put(KeyStroke.getKeyStroke("LEFT"),"leftPressed");
//		this.getInputMap(focusType).put(KeyStroke.getKeyStroke("RIGHT"),"rightPressed");
//		this.getInputMap(focusType).put(KeyStroke.getKeyStroke("UP"),"upPressed");
//		this.getInputMap(focusType).put(KeyStroke.getKeyStroke("DOWN"),"downPressed");
//		this.getInputMap(focusType).put(KeyStroke.getKeyStroke("SPACE"),"spacePressed");
//		this.getActionMap().put("leftPressed",new MoveAction(this,-1,0));
//		this.getActionMap().put("rightPressed",new MoveAction(this,1,0));
//		this.getActionMap().put("upPressed",new MoveAction(this,0,-1));
//		this.getActionMap().put("downPressed",new MoveAction(this,0,1));
//		this.getActionMap().put("spacePressed",new MoveAction(this,0,0));
	}

	public void setCenter(Point2D.Double pt) {
		this.centerPoint = pt;
	}
	
}
